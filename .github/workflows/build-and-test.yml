#
# This source file is part of the Apodini open source project
#
# SPDX-FileCopyrightText: 2021 Paul Schmiedmayer and the project authors (see CONTRIBUTORS.md) <paul.schmiedmayer@tum.de>
#
# SPDX-License-Identifier: MIT
#

name: Build and Test

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
  workflow_dispatch:

jobs:
  macos:
    name: macOS ${{ matrix.configuration }}
    runs-on: macos-11
    strategy:
      fail-fast: false
      matrix:
        configuration: [debug, release, release_testing]
    steps:
    - uses: actions/checkout@v2
    - uses: maxim-lobanov/setup-xcode@v1.4.0
      with:
        xcode-version: latest
    - uses: actions/cache@v2
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
    - name: Check Xcode version
      run: xcodebuild -version
    - name: Check Swift version
      run: swift --version
    - name: Release Build
      if: matrix.configuration == 'release'
      run: swift build -c release
    - name: Release Build & Test
      if: matrix.configuration == 'release_testing'
      run: xcodebuild -scheme ApodiniTemplate -destination platform=macOS -configuration release 'OTHER_SWIFT_FLAGS=-enable-testing -D RELEASE_TEST' test
    - name: Debug Build & Test
      if: matrix.configuration == 'debug'
      run: xcodebuild -scheme ApodiniTemplate -destination platform=macOS -configuration debug -enableCodeCoverage YES -derivedDataPath ./.xcodebuild 'OTHER_SWIFT_FLAGS=-D COVERAGE' test
    - name: Convert coverage report
      if: matrix.configuration == 'debug'
      run: |
          XCTESTPATH=./.xcodebuild/Build/Products/debug/ApodiniTemplateTests.xctest/Contents/MacOS/ApodiniTemplateTests
          COVERAGEDATA=$(find ./.xcodebuild -type f -name "Coverage.profdata")
          xcrun llvm-cov export -format="lcov" $XCTESTPATH -instr-profile $COVERAGEDATA > coverage.lcov
    - name: Upload coverage to Codecov
      if: matrix.configuration == 'debug'
      uses: codecov/codecov-action@v2
    - name: Test Generating Docs
      if: matrix.configuration == 'debug'
      run: |
          xcodebuild docbuild -scheme ApodiniTemplate -destination platform=macOS -derivedDataPath ./.xcodebuild
          cp -r $(find ./.xcodebuild -type d -name '*.doccarchive') ./ApodiniTemplate.doccarchive
          echo "The DocC archive can be found at ./ApodiniTemplate.doccarchive"
  linux:
    name: Linux ${{ matrix.linux }} ${{ matrix.configuration }}
    container:
      image: swift:${{ matrix.linux }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        linux: [bionic, focal, amazonlinux2, centos8]
        configuration: [debug, release, release_testing]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: .build
        key: ${{ runner.os }}-${{matrix.linux}}-spm-${{ hashFiles('Package.resolved') }}
    - name: Check Swift version
      run: swift --version
    - name: Release Build
      if: matrix.configuration == 'release'
      run: swift build -c release
    - name: Release Build & Test
      if: matrix.configuration == 'release_testing'
      run: swift test -c release -Xswiftc -enable-testing
    - name: Debug Build & Test
      if: matrix.configuration == 'debug'
      run: swift test -c debug
