name: Build and Test

on:
  push:
    branches:
      - develop
      - release
  pull_request:
    branches:
      - develop
      - release
  workflow_dispatch:

jobs:
  latest-beta-swift-version:
    name: Latest (Beta) Swift Version
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - uses: maxim-lobanov/setup-xcode@v1.2.3
      with:
        xcode-version: latest
    - uses: actions/cache@v2
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
    - name: Check Xcode version
      run: xcodebuild -version
    - name: Check Swift version
      run: swift --version
    - name: Debug Build & Test
      run: swift test
  macos:
    name: macOS ${{ matrix.configuration }}
    runs-on: macos-11
    strategy:
      fail-fast: false
      matrix:
        configuration: [debug, release, release_testing]
    steps:
    - uses: actions/checkout@v2
    - uses: maxim-lobanov/setup-xcode@v1.2.3
      with:
        xcode-version: latest-stable
    - uses: actions/cache@v2
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
    - name: Check Xcode version
      run: xcodebuild -version
    - name: Check Swift version
      run: swift --version
    - name: Release Build
      if: matrix.configuration == 'release'
      run: swift build -c release
    - name: Release Build & Test
      if: matrix.configuration == 'release_testing'
      run: swift test -c release -Xswiftc -enable-testing -Xswiftc -DRELEASE_TESTING
    - name: Debug Build & Test
      if: matrix.configuration == 'debug'
      run: swift test -c debug --enable-code-coverage -Xswiftc -DCOVERAGE
    - name: Convert coverage report
      if: matrix.configuration == 'debug'
      run: xcrun llvm-cov export -format="lcov" .build/debug/ApodiniTemplatePackageTests.xctest/Contents/MacOS/ApodiniTemplatePackageTests -instr-profile .build/debug/codecov/default.profdata > coverage.lcov
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
  linux:
    name: Linux ${{ matrix.linux }} ${{ matrix.configuration }}
    container:
      image: swift:${{ matrix.linux }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        linux: [bionic, xenial, focal, amazonlinux2, centos8]
        configuration: [debug, release]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: .build
        key: ${{ runner.os }}-${{matrix.linux}}-spm-${{ hashFiles('Package.resolved') }}
    - name: Check Swift version
      run: swift --version
    - name: Release Build
      if: matrix.configuration == 'release'
      run: swift build -c release
    - name: Debug Build & Test
      if: matrix.configuration == 'debug'
      run: swift test -c debug
